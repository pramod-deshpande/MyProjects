@page "/"
@inject ExportData data


<CustomHeading Title="Active Projects"></CustomHeading>
<MudContainer Class="mt-10">
    <MudGrid Spacing="5" Justify="Justify.SpaceAround">
            @if (!projects.Any())
            {
                <MudText Align="Align.Center" Typo="Typo.h6" Color="Color.Secondary">No active projects.</MudText>
            }
            else
            {
                @foreach (var project in GetProjectsByCategory(Constants.Filter_Active))
                {
            <MudItem xs="6" md="4">
                    <DataCard project="project" CustomColor="Color.Primary" />
                </MudItem>
                }
            }
        
    </MudGrid>
</MudContainer>







@code {
    List<MyProject> projects => _project.Projects;

    protected override async Task OnInitializedAsync()
    {
        _project.Projects = await _db.GetProjectsAsync();
        _project.RefreshRequested += StateHasChanged;
    }

    private List<MyProject> GetProjectsByCategory(string category)
    {
        return projects.Where(x => x.Category == category).ToList();
    }

    private async Task Export()
    {
        await data.ExportToCSV();
    }


}
