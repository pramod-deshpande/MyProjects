
<style>

    .style-link {
        transition: all 0.4s ease-in-out;
    }


        .style-link:hover{
            transform: scale(1.1);
        }

        .card {
        border-radius: 15px;
       
    }


        .card:hover {
            border: 3px solid @RandomColor.GetRandomColor();
            z-index: 500;
            border-radius: 3px;
        }


</style>


<MudPaper Elevation="4" Class="card my-8 py-4">
    <MudContainer Class="d-flex flex-column gap-4">
        <MudContainer Class="d-flex justify-space-between">
            <MudLink @onclick="@(()=>Navigation.NavigateTo($"/create/{project.Id}"))" Typo="Typo.body1" Color="Color.Dark">@project.ProjectName</MudLink>
            <MudLink Typo="Typo.body2" Href="@project.GithubLink" Class="style-link"><MudIcon Color="Color.Dark" Icon="@Icons.Custom.Brands.GitHub"></MudIcon></MudLink>
        </MudContainer>
        <MudContainer Class="d-flex justify-space-between">

            @if (!string.IsNullOrEmpty(project.Label))
            {
                <MudChip Size="Size.Small" Variant="Variant.Outlined" Color="CustomColor">@(project.Label)</MudChip>
            }
            <MudMenu Label="@project.Category">
                <ActivatorContent>
                    <MudChip Size="Size.Small" Variant="Variant.Text" Color="CustomColor">@project.Category</MudChip>
                </ActivatorContent>
                <ChildContent>
                    @foreach (var item in Constants.Filters)
                    {
                        <MudMenuItem OnClick="@(()=>ChangeCategory(item))">@item</MudMenuItem>
                    }
                </ChildContent>
            </MudMenu>

        </MudContainer>
    </MudContainer>
</MudPaper>




@code {
    [Parameter] public MyProject project { get; set; }
    [Parameter] public Color CustomColor { get; set; }
    DateTime placeholderDate = new DateTime(0001, 01, 01);


    private async Task ChangeCategory(string category)
    {
        if (category.Equals(Constants.Filter_Completed))
        {
            project.DraftCompletionDate = DateTime.Now;
            project.IsIterationCompleted = true;
        }
        project.Category = category;
        await _db.SaveItemAsync(project);
        _project.CallRequestRefresh();
        StateHasChanged();
    }
}
